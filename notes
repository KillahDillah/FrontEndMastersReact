npm init -y : creates new project / creates package.json (where dependencies live)

npm install -D prettier : -D is developer dependency, prettier is for local environment

npm install -D eslint eslint-config-prettier - eslint config it to make rules as to how code should look and where it catches

added to .gitignore

Parcel vs webpack - using Parcel (packager) because it's "hands-off", no need for config. Webpack is more difficult to setup but can do more "crazy" things, with power comes complexity

"dev": "parcel src/index.html" inside package.json serves to localhost

Because we are using Parcel - we can use JSX
JSX translates HTML into Javascript that React can use

npm install -D babel-eslint eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react
  babel-eslint : allows eslint to be augmented by babel (transpiler (allows html to be read by react))
  eslint-plugin-import : gives new rules around importing and exporting
  eslint-plugin-jsx-a11y : accessibility 
  eslint-plugin-react : help with additional React rules

inside .eslintrc.json : prettier and prettier/React MUST be at the bottom because the two rules 'turn things off'

rules allows on and off of rules from plugins
    "react/prop-types": 0 (turns off props. Prop types are not useful when using typescript)
    "no-console":1 (0- turns off rule, 1- turn rule on as a warning, 2- turn rule on as error)

npm run dev - uses Parcel's server

all HOOKS start with 'use' : useState, useEffect, useCallback...